version: '3'

x-base: &base
    env_file:
        - .env
networks:
  django_network:
    driver: bridge

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d movies_database" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    networks:
      - django_network
    expose:
      - ${POSTGRES_PORT}

  django_app:
    build:
      context: app
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      NGINX_PORT: ${NGINX_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - django_network
    expose:
      - "8000"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/templates:ro
      - ./data:/data/
    environment:
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".template"
      NGINX_SET_REAL_IP_FROM: 192.168.1.0/24
    depends_on:
      - django_app
    networks:
      - django_network
    ports:
      - ${NGINX_PORT}:80
